阿是建档立卡阿斯兰打算离婚乖啦是否啦卡号地方啦收到卢卡斯德令哈市领导
阿萨德哈拉少翻山倒海哇风林火山大两房
分公司大俯卧书啊得哦是的饭卡里的福利卡塞德里克
lfhsdlikfh lsdkj 
sfgjh dsolijgfl;






import java.util.HashMap;
import java.util.HashSet;

public class Solution
{
    public int[] twoSum(int[] nums, int target)
    {
        var result = new int[2];

        var map = new HashMap<Integer, Integer>();

        for (int i = 0; i < nums.length; i++)
        {
            if (map.containsKey(target - nums[i]))
            {
                result[0] = i;
                result[1] = map.get(target - nums[i]);
            }
            else
            {
                map.put(nums[i], i);
            }
        }
        
        return result;
    }

    public int longestConsecutive(int[] nums)
    {
        var result = 0;
        var set = new HashSet<Integer>();

        for (int num : nums)
        {
            set.add(num);
        }

        for (int num : set)
        {
            int begin = num;
            
            if (!set.contains(num - 1))
            {
                while (set.contains(num + 1))
                {
                    num++;
                }
                
                result = Math.max(result, num - begin + 1);
            }
        }
        
        return result;
    }

    // 测试
}
